.LOG

19:05 08.12.2021
Добавлен файл project_config.h
Вывод: неудобно - лучше, когда настройки в .ini - Clean!!

18:20 27.04.2022
Обновление Espressif 32  3.5.0->4.1.0 НЕ СОВМЕСТИМО 

20:00 17.12.2022
MESP32 -------->> MKlon2v5a (pcb: MKlon2.5 с доработкой)
План:
 1. Задачу touchTask отключить                       - ok
 2. Дисплей с HSPI переключить на VSPI               - ok
  При обновлении TFT_eSPI
  В User_Setup_Select.h вставить
  #include <User_Setups/Setup7_ST7735_128x160.h>     // Setup file configured for my ST7735 128x160 display (MKlon2)
  Сам файл из lib скопировать в User_Setups
 3. index.htm заменить заголовок Klon2.5a Monitor    - ok
 4. touch off                                        - ok
 5. Репозиторий "Эксперименты MKlon2v5a"             - ok
 6. В диспетчере откорректировать версию MKlon2v5a   - ok

07:00 19.12.2022 
 1. BUTTON add                                        - не проверено
 2. PCF8574 убрать, mpins и mboard откорректировать
  заменить board/board.h, .cpp                        - не проверено 

07:00 30.12.2022
Исправление v5, v7, MKlon1:
          SAMD   ESP
REQUEST : PA11 - IO17
REPLY   : PA10 - IO16

07:00 03.01.2023
Кнопки:
p  - 2.76   7.50
UP - 2.22   3.00
DN - 1.66   1.50
C  - 1.17   0.820
B  - 0.55   0.300
 ±2%

21:00 04.01.2023
RAM:   [=         ]  13.1% (used 42960 bytes from 327680 bytes)
Flash: [========  ]  80.4% (used 1054202 bytes from 1310720 bytes)
Auto-detected Flash size: 4MB
Connected! IP address: 192.168.0.12

18:00 07.01.2023
Buttons: mmeasure и mkeyboard заменены 
на соответствующие из проекта MORO2020_2  - ОК
Параметры делителя надо уточнить.         - 

08:00 08.01.2023
Измеритель температуры радиатора          - ОК

================= MKlon2v7 ============================
08:00 11.01.2023
Проверка подключения дисплея для MKlon2v7a  - ok

21:00 12.01.2023
Исправлена топология UART и RGBled    - ok
Временно, в v7 поменял порты на LEDR и LEDB 

22:00 14.01.2023
Эксперимент с DS3231
На вывод модуля 32K переподключен RST для аппаратной блокировки 
дребезга кнопок сброса. R3 12ком удален. Результата нет, так как в цепи 
остался резистор 10ком на модуле SAMD21. Но и без этого модуля дребезг 
убрать не удалось. Предположительно в модуле ESP32 есть свой резистор 
на плюс питания. Требуемые 50ком недоступны.

Первое включение с нагрузкой от 3А источника
Включение под нагрузкой 100 ом в режиме PIDTEST 14в  - ок

08:00 15.01.2023
Включение под нагрузкой 14 ом в режиме PIDTEST 14в  - 
Замечено безаварийное отключение преобразователя в момент передачи 
команды (10h). SAMD21 уходит в перезагрузку на 0,6с. ESP32 из режима 
не выходит, но отрабатывает останов с отключением индикатора BAR. На 
шине сброса замечены "иголки".

17:00 20.01.2023
На v5a установлен C48 3.3µF, при полном питании 19,4 в сбой устранен.
Повторено на v7a   - ok
Новый режим UPID - для подбора коэффициентов ПИД-регулятора по напряжению   - начато

07:00 21.01.2023
Зуммер на нажатие       - ОК

21:00 22.01.2023
Индикация float изменяемого параметра - ОК

09:00 23.01.2023
UPID, Загрузка профиля

09:00 24.01.2023
UPID, STOP/GO                         - OK
Сохранение профиля                    - не проверялось
IPID,                                 - не проверялось
Описание в upidfsm.cpp  ==========  КАК ЭТО РАБОТАЕТ ==========

12:20 25.01.2023
Удален режим PIDTEST                  - OK
SAMD21 - добавлен сброс флага overloadStatus синхронно с запуском регулятора PIDTEST
Файлы upidfsm.h и .cpp :
https://disk.yandex.ru/d/Z-sI9TRPyOG1Dg

08:20 26.01.2023
-> 1.74.3                             - OK
RAM:   [=         ]  14.8% (used 48436 bytes from 327680 bytes)
Flash: [==        ]  18.8% (used 1231134 bytes from 6553600 bytes)
D-PID                                 - отложено

08:20 29.01.2023
txPidGetParam();  // 0x47 оставить для контроля параметров
txPidSetParam(parameterShift, pidHz) 0x4A и возвращает вычисленные paramMult и paramMax - оменено

17:20 30.01.2023
mtools.cpp - убраны следы тестирования команд           - Ok
Калибровки и фильтр в mtools.h и devicefsm.h уточнены   - ОК
Отключение загрузки BOOT                                - OK
В части параметров PID драйвер настроен так: 
static constexpr uint8_t  param_shift = 8;
static constexpr uint8_t  param_bits  = 16;
static constexpr uint16_t param_max   = (((0x1ULL << param_bits)-1) >> param_shift);
static constexpr uint16_t param_mult  = (((0x1ULL << param_bits)) >> (param_bits - param_shift)); = 0x 100
static constexpr uint16_t hz = 10;

06:20 31.01.2023
На дисплее A и V точка зафиксирована        - OK
Профиль копируется в рабочие регистры       - OK
Верхние пределы kp, ki, kd установлены 2,00 - OK до вычисления

Команда 0x47 Чтение параметров обмена с ПИД-регулятором
Новый формат: Принимаются данные для вычисления множителя, максимума и частота:
txGetPidTreaty() - от драйвера приходят сдвиг, число бит и частота для вычисления 
множителя и пределов передаваемых параметров.

08:20 01.02.2023
Резисторы фильтра на входе измерителя тока заменены на 33кОм
Команда 0x15 Чтение температуры радиатора удалена (нет в этом проекте)
Тестирование 0x47: C0 47 07 00   00 0A   00 10   00 0A  28  - ok
                                 shift   bits     hz
Расчет множителя с записью
Tools->pMult                                                - ok
Tools->pMult                                                - ok
Tools->pHz                                                  - ok

Заменить:
paramMult  на Mult                                          - ok
paramMax   на pMax                                          - ok
paramHz    на pHz                                           - ok
Проверки при вводе kp ki kd не производились                - отложено

При драйвере shift=10 по сравнению с shift=8 пришлось уменьшить 
параметры kp и ki. Вывод: пробовать shift<8                 - отменено

08:20 02.02.2023
Проба shift=7 - отличий не замечено, возврат к 8        - OK

08:20 03.02.2023
Дисплей - альтернативное отображение в строках напряжения и тока  - OK
IPID подправлен в части отображения и проверок                    - OK

20:50 05.02.2023
Добавлен подсчет ампер-часов при тестировании ПИД       - ОК

07:50 06.02.2023
Подготовка к тестированию D-PID
Драйвер - уточнение дефолтных коэффициентов и пределов регулирования.         - Ok
На осциллограмме UPID без врезок, I и D - с одной или двумя соответственно.   - OK

20:00 10.02.2023
Восстановлена команда отладки разряда 0x5A 
void txSetDiscurrent(uint8_t m, unsigned short val);
Ток разряда задается как и заряда - беззнаково
Сваливание в нерегулируемый максимум


19:13 14.02.2023
Дефолтные:
      factor_default_v = 0x5326                       - OK
      smooth_default_v =      4                       - OK
      shift_default_v  =      0                       - OK
      factor_default_i = 0x7918                       - OK
      smooth_default_i =      2                       - OK
      shift_default_i  =      0                       - OK

19:14 14.02.2023
Добавлена команда завершения процесса согласования параметров
    Tools->txReady();      // 0x15  Команда драйверу

20:23 17.02.2023
В части параметров PID драйвер настроен так: 
param_shift = 9
param_bits  = 16
param_max   = 0x003F
param_mult  = 0x0200
hz = 10;

20:23 26.02.2023
Поднят минимум оборотов до 100.0f

=============================================================
10:00 27.02.2023
Проект переносится в репозиторий F:\GitHub\MKlon2.8
RAM:   [=         ]  14.8% (used 48460 bytes from 327680 bytes)
Flash: [==        ]  18.9% (used 1239442 bytes from 6553600 bytes)
Обновлено:
  PIO v2.5.5  --> v3.0.0
  C++         --> v2.0.0
  
10:00 01.03.2023
Test Разряд Исправлен dpidfsm
RAM:   [=         ]  14.8% (used 48460 bytes from 327680 bytes)
Flash: [==        ]  18.9% (used 1239530 bytes from 6553600 bytes)
RAM:   [=         ]  14.8% (used 48460 bytes from 327680 bytes)
Flash: [==        ]  18.9% (used 1239454 bytes from 6553600 bytes)

07:00 02.03.2023
tools - убран мусор

09:30 03.03.2023
Сглаживание по току установлено 4 по умолчанию 

18:30 04.03.2023
Скорректированы коэфф  0,070 0,020 0,002
Устойчиво заряжались все батареи U-PID 13,2 - 14,7в

07:40 05.03.2023
Фильтр на приемной стороне, в MTools::setMilliAmper(short val)
добавлено вычисление среднего:
  static int32_t sum = 0;
  short k = 4;
  val = (sum += val - (sum >> k)) >> k;
Аналогично и для MTools::setMilliVolt(short val)
где k - коэффициент "красоты" (beauty_coefficient, beauty)

21:40 07.03.2023
Увеличена частота регулирования  до 100Гц (фиксировано)
Коэффициенты ожидаемо увеличились.
k уменьшены до 2-х
PID: 0.56 1.79 0.09
